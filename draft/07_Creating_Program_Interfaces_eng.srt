1
00:00:00,900 --> 00:00:03,000
《Wolfram笔记本简介》中的本章节是

2
00:00:03,000 --> 00:00:06,400
一个有关交互性功能 例如托盘和对话框的调查 // unconfirmed

3
00:00:06,400 --> 00:00:09,200
这些功能在完成的应用程序中很常见 // unconfirmed

4
00:00:09,200 --> 00:00:10,800
Wolfram 笔记本系统有很多

5
00:00:10,800 --> 00:00:13,000
这些功能的例子

6
00:00:13,000 --> 00:00:15,300
例如 这是一个超链接对话框

7
00:00:15,300 --> 00:00:17,400
它出现于上一个章节

8
00:00:17,400 --> 00:00:18,900
就像大多数对话框

9
00:00:18,900 --> 00:00:21,100
它就是一些交互式控件的集合

10
00:00:21,100 --> 00:00:24,000
例如单选框和文本框

11
00:00:24,000 --> 00:00:27,500
以及取消和完成超链接的按钮

12
00:00:27,500 --> 00:00:29,250
交互性控件能被展示在

13
00:00:29,250 --> 00:00:30,700
一个叫做“palette”的窗口中

14
00:00:30,700 --> 00:00:31,700
例如

15
00:00:31,700 --> 00:00:34,000
在“插入” (Insert) 菜单下点击“特殊字符” (Special Characters)

16
00:00:34,000 --> 00:00:37,300
会出现一个输入特殊字符的 palette

17
00:00:37,300 --> 00:00:39,800
这个面板展示了一些按钮网格 // unconfirmed

18
00:00:39,800 --> 00:00:42,800
伴随着选择哪个网格将被显示的标签页

19
00:00:42,800 --> 00:00:44,000
单击其中任何一个按钮

20
00:00:44,000 --> 00:00:47,800
可以将字符粘贴进笔记本中

21
00:00:47,800 --> 00:00:49,600
对于完成的独立应用 // unconfirmed

22
00:00:49,600 --> 00:00:52,100
使用 Manipulate 函数可以完成很多事情

23
00:00:52,100 --> 00:00:54,000
例如 这里是一个 Manipulate 结果

24
00:00:54,000 --> 00:00:57,000
来自 Wolfram 示范工程 (Wolfram Demonstrations Project) 网页

25
00:00:57,000 --> 00:00:58,700
这个应用提供一些控件

26
00:00:58,700 --> 00:01:00,500
来为世界上的国家绘图

27
00:01:00,500 --> 00:01:04,000
基于两个弹出式菜单中被选中的属性 // unconfirmed

28
00:01:04,000 --> 00:01:06,000
这里有按钮来为图象选择

29
00:01:06,000 --> 00:01:08,300
线性标尺或对数标尺 // unconfirmed

30
00:01:08,300 --> 00:01:09,900
并且选择每个国家

31
00:01:09,900 --> 00:01:13,600
应该被显示成一个点或其国旗

32
00:01:13,600 --> 00:01:16,000
或其国名

33
00:01:16,000 --> 00:01:18,400
本章节的目的是描述一些

34
00:01:18,400 --> 00:01:21,500
有关这些交互性接口如何被创建的细节

35
00:01:21,500 --> 00:01:22,650
从 Manipulate 开始

36
00:01:22,650 --> 00:01:25,000
这里是一个包含两个滑块的更简单的例子

37
00:01:25,000 --> 00:01:26,800
它们控制

38
00:01:26,800 --> 00:01:28,900
图像上某个点的位置

39
00:01:28,900 --> 00:01:31,600
这些控件的一个潜在易懂的安排 // unconfirmed

40
00:01:31,600 --> 00:01:33,000
是使这个垂直坐标

41
00:01:33,000 --> 00:01:35,400
由一个垂直的滑块控制 // unconfirmed

42
00:01:35,400 --> 00:01:37,600
并且将其放置在这个图像的左侧

43
00:01:37,600 --> 00:01:39,650
这个能由 ControlType

44
00:01:39,650 --> 00:01:42,950
和 ControlPlacement 选项完成

45
00:01:42,950 --> 00:01:45,000
这个控件还能是一个二维滑块

46
00:01:45,000 --> 00:01:48,800
它能被 Slider2D 限定

47
00:01:48,800 --> 00:01:50,500
这里还有一个控件 称为 Locator

48
00:01:50,500 --> 00:01:54,300
它将这个控件放在了图像的右侧

49
00:01:54,300 --> 00:01:56,700
回到这个二维滑块 // unconfirmed

50
00:01:56,700 --> 00:02:00,000
想象用更多的控件扩展这个例子是很容易的 // unconfirmed

51
00:02:00,000 --> 00:02:03,000
例如 这个输入给出了四个二维滑块

52
00:02:03,000 --> 00:02:07,900
以控制两个线段的四个端点

53
00:02:07,900 --> 00:02:09,650
在类似于此的有很多控件的例子中

54
00:02:09,650 --> 00:02:11,600
它在组织控件时很有用

55
00:02:11,600 --> 00:02:13,000
在一些有意义的布局中

56
00:02:13,000 --> 00:02:15,200
它可以被一些布局函数完成

57
00:02:15,200 --> 00:02:17,000
能被用在这个笔记本的其他地方

58
00:02:17,000 --> 00:02:18,600
一个在本例中有用的

59
00:02:18,600 --> 00:02:20,000
布局函数是 Grid

60
00:02:20,000 --> 00:02:23,650
它可以把表达式显示在一个二维网格中

61
00:02:23,650 --> 00:02:25,750
那个网格中的元素可以是任何事物

62
00:02:25,750 --> 00:02:29,000
可以包括 例如像二维滑块一样的控件

63
00:02:29,000 --> 00:02:31,700
若要在 Manipulate 中使用 Grid 函数 需要添加花括号 

64
00:02:31,700 --> 00:02:35,000
这样的话 这个控件的限定就会变为一个数组的元素 // unconfirmed

65
00:02:35,000 --> 00:02:38,000
并且附在 Grid 的数组中 // unconfirmed

66
00:02:38,000 --> 00:02:40,100
一个剩下的来完成这个输入的细节

67
00:02:40,100 --> 00:02:42,300
是附在每个滑块的限定 // unconfirmed

68
00:02:42,300 --> 00:02:44,000
在 Control 函数中

69
00:02:44,000 --> 00:02:46,450
这个 Control 函数在以前是不必要的

70
00:02:46,450 --> 00:02:49,000
但是在这里需要使用以区分

71
00:02:49,000 --> 00:02:51,650
作为这个数组的一部分的列表 // unconfirmed

72
00:02:51,650 --> 00:02:53,900
和限定这个控件的列表 // unconfirmed

73
00:02:53,900 --> 00:02:57,400
以及区分这些控件和其他布局函数 // unconfirmed

74
00:02:57,400 --> 00:03:01,500
这个结果展示了一些被安排在一个网格中的滑块

75
00:03:01,500 --> 00:03:04,100
像 TabView 的函数还可以被用在 Manipulate 中

76
00:03:04,100 --> 00:03:06,550
例如 这里使用了 TabView 函数

77
00:03:06,550 --> 00:03:09,700
来把每个控件放在不同的标签页中

78
00:03:09,700 --> 00:03:10,800
这里还有很多

79
00:03:10,800 --> 00:03:13,000
其他方法来给控件添上标签和安排控件

80
00:03:13,000 --> 00:03:15,500
例如 回到稍早一些的例子

81
00:03:15,500 --> 00:03:16,800
这里大部分的代码

82
00:03:16,800 --> 00:03:19,800
在这个 Manipulate 函数的第一个参数中

83
00:03:19,800 --> 00:03:22,400
这个控件被末尾几行代码限定

84
00:03:22,400 --> 00:03:23,400
这里有一个标签

85
00:03:23,400 --> 00:03:26,400
跟随一个限定 它给出一个弹出式菜单

86
00:03:26,400 --> 00:03:29,000
来选定这个图象的垂直变量

87
00:03:29,000 --> 00:03:31,000
下一个限定给出一个控件

88
00:03:31,000 --> 00:03:32,000
被称作 setter bar // unconfirmed

89
00:03:32,000 --> 00:03:35,000
以决定对垂直轴使用对数标尺

90
00:03:35,000 --> 00:03:37,500
还是线性标尺

91
00:03:37,500 --> 00:03:40,700
Delimiter 在一些控件组之间绘制线条

92
00:03:40,700 --> 00:03:43,600
在这之后是对于水平轴的相似控件

93
00:03:43,600 --> 00:03:45,000
并且在最后是一排按钮

94
00:03:45,000 --> 00:03:48,000
来选择每个国家应被绘制成一个点

95
00:03:48,000 --> 00:03:51,500
或一面国旗或这个国家的名字

96
00:03:51,500 --> 00:03:53,500
这些控件的类型将被自动确定

97
00:03:53,500 --> 00:03:56,000
基于这个变量是如何被限定的 // unconfirmed

98
00:03:56,000 --> 00:03:58,000
你可以使用 ControlType 选项

99
00:03:58,000 --> 00:03:59,500
来限定一个不同的控件 // unconfirmed

100
00:03:59,500 --> 00:04:03,350
例如 这个限定了第一个标尺控件 // unconfirmed

101
00:04:03,350 --> 00:04:06,700
应该是一个 RadioButtonBar 而不是一个 SetterBar

102
00:04:06,700 --> 00:04:09,000
这个程序的行为伴随着单选按钮 // unconfirmed

103
00:04:09,000 --> 00:04:10,000
和以前相同

104
00:04:10,000 --> 00:04:12,200
但是那个变量的控件

105
00:04:12,200 --> 00:04:14,700
有一个不同的外观

106
00:04:14,700 --> 00:04:17,300
还有很多其他事情能由 Manipulate 完成

107
00:04:17,300 --> 00:04:18,300
一个很好的例子的源

108
00:04:18,300 --> 00:04:20,500
是 Wolfram 示范工程 (Wolfram Demonstrations Project) 网页

109
00:04:20,500 --> 00:04:24,000
那里你可以发现数千个由用户提交的例子

110
00:04:24,000 --> 00:04:27,300
并且 Wolfram 文档中也有很多

111
00:04:27,300 --> 00:04:30,600
有关 Manipulate 函数的好教程

112
00:04:30,600 --> 00:04:33,000
Manipulate 对于独立应用程序很有用

113
00:04:33,000 --> 00:04:36,500
它们的控件和显示结果被放在一处

114
00:04:36,500 --> 00:04:37,600
但是还有很多应用程序

115
00:04:37,600 --> 00:04:40,200
对于它们来说 把控件放在别处更有用

116
00:04:40,200 --> 00:04:41,350
一个放控件的地方

117
00:04:41,350 --> 00:04:43,900
是一个叫做 palette 的独立窗口

118
00:04:43,900 --> 00:04:46,100
这是一个先前展示出的例子

119
00:04:46,100 --> 00:04:48,000
它是一个特殊字符面板

120
00:04:48,000 --> 00:04:51,000
这个面板是一些粘贴 (paste) 按钮的集合

121
00:04:51,000 --> 00:04:54,500
它们能被 PasteButton 函数生成

122
00:04:54,500 --> 00:04:56,800
例如 这里给出一个粘贴按钮

123
00:04:56,800 --> 00:05:00,800
它能把“ABC”字母粘贴进当前笔记本

124
00:05:00,800 --> 00:05:02,300
您可以创建一个按钮网格 // unconfirmed

125
00:05:02,300 --> 00:05:04,500
就像特殊字符面板里的网格那样

126
00:05:04,500 --> 00:05:06,300
使用 Grid 函数

127
00:05:06,300 --> 00:05:08,800
那个网格可以被转换成一个面板 (Palette)

128
00:05:08,800 --> 00:05:11,300
使用 CreatePalette 函数

129
00:05:11,300 --> 00:05:13,200
之后 那个面板里的按钮能被用于

130
00:05:13,200 --> 00:05:15,500
把字符插入进笔记本

131
00:05:15,500 --> 00:05:18,000
这个面板还能通过选定

132
00:05:18,000 --> 00:05:19,800
那个按钮网格并从“面板” (Palette) 菜单下

133
00:05:19,800 --> 00:05:23,500
选择“从选定内容中创建面板” (Create Palette from Section) 来生成

134
00:05:23,500 --> 00:05:26,300
面板也可以包含除粘贴按钮外的其他控件

135
00:05:26,300 --> 00:05:27,500
例如

136
00:05:27,500 --> 00:05:29,800
此输入提供了一个带有弹出菜单的面板

137
00:05:29,800 --> 00:05:31,000
用于选择位置

138
00:05:31,000 --> 00:05:34,300
和一个粘贴按钮 用于把所选位置

139
00:05:34,300 --> 00:05:36,500
粘贴进笔记本

140
00:05:36,500 --> 00:05:39,700
面板的一种常见用法是用于输入函数模板 // unconfirmed

141
00:05:39,700 --> 00:05:41,000
例如 考虑一个项目

142
00:05:41,000 --> 00:05:43,200
那里有一些常用输入

143
00:05:43,200 --> 00:05:45,300
像这样的输入 给出了当前温度

144
00:05:45,300 --> 00:05:48,200
当前温度和当地时间

145
00:05:48,200 --> 00:05:50,900
相较于为了每个位置输入一个完整的输入

146
00:05:50,900 --> 00:05:53,400
我们能像这样从一个模板开始

147
00:05:53,400 --> 00:05:56,400
伴随着一个称为“占位符” (Selection Placeholder) 的小黑方块 // unconfirmed

148
00:05:56,400 --> 00:05:58,200
在这个位置的地方

149
00:05:58,200 --> 00:06:00,000
这个小黑方块是一个特殊的字符

150
00:06:00,000 --> 00:06:01,800
它能以不同方式被键入

151
00:06:01,800 --> 00:06:04,000
其中之一是输入反斜杠 (\)

152
00:06:04,000 --> 00:06:05,100
和一个左方括号 ([)

153
00:06:05,100 --> 00:06:06,800
接着是这个字符的名称

154
00:06:06,800 --> 00:06:09,200
这个字符的名称是“SelectionPlaceholder”

155
00:06:09,200 --> 00:06:11,800
这个字符会在

156
00:06:11,800 --> 00:06:14,500
键入右方括号 (]) 后立刻出现

157
00:06:14,500 --> 00:06:16,200
一个面板伴随着能输入那个模板的按钮

158
00:06:16,200 --> 00:06:18,800
能在第一次创建那个按钮时生成

159
00:06:18,800 --> 00:06:21,500
在此输入中 Defer 函数是包含在内的

160
00:06:21,500 --> 00:06:23,400
这样这个程序就不能被评估 // unconfirmed

161
00:06:23,400 --> 00:06:26,700
直到一个值被插入到那个占位符中

162
00:06:26,700 --> 00:06:29,000
这个 Defer 函数 或其他有同样效果的东西

163
00:06:29,000 --> 00:06:32,500
是类似于此的例子的其中一个常见必需品

164
00:06:32,500 --> 00:06:34,300
这个结果是一个能被点击

165
00:06:34,300 --> 00:06:35,600
以在占位符中插入值

166
00:06:35,600 --> 00:06:37,900
的一个按钮

167
00:06:37,900 --> 00:06:41,000
或者我们能从键入一个位置

168
00:06:41,000 --> 00:06:42,400
选中这个位置

169
00:06:42,400 --> 00:06:44,050
并点击按钮来生成

170
00:06:44,050 --> 00:06:47,600
能自动把选中项插入到模板中的输入开始

171
00:06:47,600 --> 00:06:50,900
之后评估输入 // unconfirmed

172
00:06:50,900 --> 00:06:53,400
那个按钮的稍短的标签能被输入

173
00:06:53,400 --> 00:06:55,600
通过包含那个标签 将其作为第一个参数

174
00:06:55,600 --> 00:06:57,500
在 PasteButton 函数中

175
00:06:57,500 --> 00:07:01,200
接着使用 CreatePalette 函数 将这个按钮移动到面板中

176
00:07:01,200 --> 00:07:04,500
这个函数给出一个包含一个按钮的面板

177
00:07:04,500 --> 00:07:05,500
这个面板中的按钮

178
00:07:05,500 --> 00:07:07,800
就像先前创建的按钮一样工作

179
00:07:09,450 --> 00:07:11,950
另一种互动方式来产生相同的结果的

180
00:07:11,950 --> 00:07:13,500
是使用一个对话框。

181
00:07:13,500 --> 00:07:15,100
例如 这是一个输入

182
00:07:15,100 --> 00:07:18,400
使用 DialogInput 函数生成一个对话框

183
00:07:18,400 --> 00:07:21,300
伴随着一个弹出式菜单以选择一个位置

184
00:07:21,300 --> 00:07:23,600
然后点击“完成” (Done) 来评估程序

185
00:07:23,600 --> 00:07:27,000
它生成时间和温度的结果

186
00:07:27,000 --> 00:07:29,000
为了稍打断那个输入 // unconfirmed

187
00:07:29,000 --> 00:07:31,650
此输入使用 DialogueInput 函数

188
00:07:31,650 --> 00:07:34,200
给出一个仅有两个按钮的对话框

189
00:07:34,200 --> 00:07:37,000
它们被 ChoiceButtons 函数创建

190
00:07:37,000 --> 00:07:40,100
单击“取消” (Cancel) 按钮返回“$ Canceled”

191
00:07:40,100 --> 00:07:44,000
然后单击“确定” (OK) 只是关闭对话框

192
00:07:44,000 --> 00:07:46,200
对话框可以
退还一些东西

193
00:07:46,200 --> 00:07:48,500
通过包括
DialogueReturn功能

194
00:07:48,500 --> 00:07:51,000
在争论中
ChoiceButtons函数。

195
00:07:51,000 --> 00:07:53,200
例如，此输入
给出一个对话框

196
00:07:53,200 --> 00:07:55,900
点击完成
返回一个数字

197
00:07:55,900 --> 00:08:00,200
然后单击取消
返回符号$ Canceled。

198
00:08:00,200 --> 00:08:02,800
获取对话框
对于时间和温度数据，

199
00:08:02,800 --> 00:08:04,200
我们可以修改这个程序

200
00:08:04,200 --> 00:08:06,500
运行时间
和温度程序

201
00:08:06,500 --> 00:08:08,500
而不只是
返回一个数字，

202
00:08:08,500 --> 00:08:11,400
并包含一个弹出菜单
选择位置。

203
00:08:13,000 --> 00:08:15,000
其他两个修改
在这个程序中

204
00:08:15,000 --> 00:08:17,000
是加法
DynamicModule的

205
00:08:17,000 --> 00:08:18,500
和Column函数。

206
00:08:18,500 --> 00:08:21,000
包含列功能
这样弹出菜单

207
00:08:21,000 --> 00:08:23,500
和选择按钮
显示在列中

208
00:08:23,500 --> 00:08:27,200
并包含DynamicModule
定位变量loc，

209
00:08:27,200 --> 00:08:29,500
自弹出菜单
否则会分配

210
00:08:29,500 --> 00:08:32,700
该变量的全局值
这可能是一个问题

211
00:08:32,700 --> 00:08:34,500
如果同名变量

212
00:08:34,500 --> 00:08:37,500
用于其他地方
在项目���。

213
00:08:37,500 --> 00:08:38,500
在关闭本节之前，

214
00:08:38,500 --> 00:08:40,800
另一个地方
放置交互式控件

215
00:08:40,800 --> 00:08:43,000
在固定位置
在笔记本顶部

216
00:08:43,000 --> 00:08:45,300
使用功能
称为停靠单元。

217
00:08:45,300 --> 00:08:46,700
可以创建停靠的单元格

218
00:08:46,700 --> 00:08:49,900
通过设置DockedCells选项
当前笔记本的。

219
00:08:49,900 --> 00:08:51,000
例如，此输入

220
00:08:51,000 --> 00:08:54,000
引入一个停靠的单元
有一些文字。

221
00:08:54,000 --> 00:08:55,750
通常输入
用于停靠的单元格

222
00:08:55,750 --> 00:08:58,500
是原始细胞表达
不只是一些文字，

223
00:08:58,500 --> 00:09:01,000
和推荐的单元格样式
对于那个细胞

224
00:09:01,000 --> 00:09:04,000
是DockedCell，
如在此输入中。

225
00:09:04,000 --> 00:09:07,000
通常使用对接单元
用于控制或其他

226
00:09:07,000 --> 00:09:08,500
在整个过程中
笔记本。

227
00:09:08,500 --> 00:09:10,100
例如，这是一个笔记本

228
00:09:10,100 --> 00:09:12,600
带有弹出菜单
用于选择位置

229
00:09:12,600 --> 00:09:14,500
和几个要素
在那个笔记本里

230
00:09:14,500 --> 00:09:16,500
取决于选择。

231
00:09:16,500 --> 00:09:18,500
TrackedSymbols选项
包括在这里

232
00:09:18,500 --> 00:09:20,000
这样那些元素

233
00:09:20,000 --> 00:09:22,500
仅更新
更改位置后，

234
00:09:22,500 --> 00:09:25,000
而不是随时更新
事物有变化

235
00:09:25,000 --> 00:09:27,300
例如时间或温度。

236
00:09:27,300 --> 00:09:29,200
这是一个例子
在可能有用的地方

237
00:09:29,200 --> 00:09:31,500
放置弹出菜单
在停靠的单元格中。

238
00:09:31,500 --> 00:09:34,000
首先设置单元格样式
到DockedCell

239
00:09:34,000 --> 00:09:37,000
使用样式子菜单
在格式菜单下，

240
00:09:37,000 --> 00:09:39,000
然后复制单元格
通过选择

241
00:09:39,000 --> 00:09:41,800
复制为▶单元格表达
从编辑菜单。

242
00:09:41,800 --> 00:09:43,650
然后粘贴该单元格
输入

243
00:09:43,650 --> 00:09:45,900
设定价值
DockedCells选项

244
00:09:45,900 --> 00:09:47,000
对于这个笔记本。

245
00:09:47,000 --> 00:09:48,400
这会弹出一个对话框

246
00:09:48,400 --> 00:09:50,400
询问细胞
应该被解释

247
00:09:50,400 --> 00:09:52,500
或应粘贴
作为细胞表达。

248
00:09:52,500 --> 00:09:54,400
在这个例子中
目的是使用

249
00:09:54,400 --> 00:09:56,500
未解释的原始
细胞表达

250
00:09:56,500 --> 00:10:00,500
所以选择否，然后评估
结果输入

251
00:10:00,500 --> 00:10:02,400
放置弹出菜单
在停靠的牢房中

252
00:10:02,400 --> 00:10:05,000
在笔记本顶部。

253
00:10:05,000 --> 00:10:07,000
到此为止
对于本节。

254
00:10:07,000 --> 00:10:09,150
还有更多要说的
关于所有主题

255
00:10:09,150 --> 00:10:10,650
在这个简短的导览中

256
00:10:10,650 --> 00:10:14,200
构造特征
交互式程序界面。

257
00:10:14,200 --> 00:10:16,000
一个很好的起点
查找更多信息

258
00:10:16,000 --> 00:10:17,300
在Wolfram文档中

259
00:10:17,300 --> 00:10:20,200
此页面是否在
自定义界面构造，

260
00:10:20,200 --> 00:10:22,000
其中包括链接
到文档

261
00:10:22,000 --> 00:10:24,500
对于所有主题
在本节中提到的。

