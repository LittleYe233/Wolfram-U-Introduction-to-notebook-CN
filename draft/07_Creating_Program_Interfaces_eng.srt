1
00:00:00,900 --> 00:00:03,000
《Wolfram笔记本简介》
中的本章节是

2
00:00:03,000 --> 00:00:06,400
一个有关交互性功能
例如托盘和对话框的调查 // unconfirmed

3
00:00:06,400 --> 00:00:09,200
这些功能在完成的应用 // unconfirmed
程序中很常见

4
00:00:09,200 --> 00:00:10,800
Wolfram 笔记本系统有很多

5
00:00:10,800 --> 00:00:13,000
这些功能的例子

6
00:00:13,000 --> 00:00:15,300
例如
这是一个超链接对话框

7
00:00:15,300 --> 00:00:17,400
它出现于上一个章节

8
00:00:17,400 --> 00:00:18,900
就像大多数对话框

9
00:00:18,900 --> 00:00:21,100
它就是一些交互式控件的集合

10
00:00:21,100 --> 00:00:24,000
例如单选框和文本框

11
00:00:24,000 --> 00:00:27,500
以及取消和完成超链接的按钮

12
00:00:27,500 --> 00:00:29,250
交互性控件能被展示在

13
00:00:29,250 --> 00:00:30,700
一个叫做“palette”的窗口中

14
00:00:30,700 --> 00:00:31,700
例如

15
00:00:31,700 --> 00:00:34,000
在“插入” (Insert) 菜单下
点击“特殊字符” (Special Characters)

16
00:00:34,000 --> 00:00:37,300
会出现一个输入特殊字符的 palette

17
00:00:37,300 --> 00:00:39,800
This palette shows
several grids of buttons,

18
00:00:39,800 --> 00:00:42,800
with tabs for choosing
which grid to display.

19
00:00:42,800 --> 00:00:44,000
Clicking any of the buttons

20
00:00:44,000 --> 00:00:47,800
pastes that character
into the notebook.

21
00:00:47,800 --> 00:00:49,600
For complete
standalone applications,

22
00:00:49,600 --> 00:00:52,100
quite a lot can be done
using the Manipulate function.

23
00:00:52,100 --> 00:00:54,000
For example,
here is a Manipulate result

24
00:00:54,000 --> 00:00:57,000
from the Wolfram Demonstrations
Project website.

25
00:00:57,000 --> 00:00:58,700
This application gives controls

26
00:00:58,700 --> 00:01:00,500
for plotting countries
of the world

27
00:01:00,500 --> 00:01:04,000
based on properties selected
from two popup menus.

28
00:01:04,000 --> 00:01:06,000
There are also buttons
for choosing linear

29
00:01:06,000 --> 00:01:08,300
or logarithmic scales
for the plot

30
00:01:08,300 --> 00:01:09,900
and for choosing
whether each country

31
00:01:09,900 --> 00:01:13,600
should be shown as a dot
or as the flag of the country

32
00:01:13,600 --> 00:01:16,000
or as the name of the country.

33
00:01:16,000 --> 00:01:18,400
The purpose of this section
is to describe a few details

34
00:01:18,400 --> 00:01:21,500
of how these interactive
interfaces are constructed.

35
00:01:21,500 --> 00:01:22,650
Starting with Manipulate,

36
00:01:22,650 --> 00:01:25,000
here is a simpler example
with two sliders

37
00:01:25,000 --> 00:01:26,800
for controlling the position

38
00:01:26,800 --> 00:01:28,900
of a point in an image.

39
00:01:28,900 --> 00:01:31,600
A potentially more intuitive
arrangement of these controls

40
00:01:31,600 --> 00:01:33,000
would be to make the control

41
00:01:33,000 --> 00:01:35,400
for the vertical coordinate
into a vertical slider

42
00:01:35,400 --> 00:01:37,600
and position it
on the left side of the image,

43
00:01:37,600 --> 00:01:39,650
which can be done
using the ControlType

44
00:01:39,650 --> 00:01:42,950
and ControlPlacement options.

45
00:01:42,950 --> 00:01:45,000
The control could also be
a two-dimensional slider,

46
00:01:45,000 --> 00:01:48,800
which can be specified
using Slider2D.

47
00:01:48,800 --> 00:01:50,500
There is also a control
called a Locator

48
00:01:50,500 --> 00:01:54,300
that puts the control
right on the image.

49
00:01:54,300 --> 00:01:56,700
Returning for now though
to the two-dimensional slider,

50
00:01:56,700 --> 00:02:00,000
it is easy to imagine extending
this example with more controls.

51
00:02:00,000 --> 00:02:03,000
For example, this input gives
four two-dimensional sliders

52
00:02:03,000 --> 00:02:07,900
for controlling opposite ends
of two line segments.

53
00:02:07,900 --> 00:02:09,650
In examples like this
with many controls,

54
00:02:09,650 --> 00:02:11,600
it can be useful
to organize the controls

55
00:02:11,600 --> 00:02:13,000
in some meaningful layout,

56
00:02:13,000 --> 00:02:15,200
which can be done
using the same layout functions

57
00:02:15,200 --> 00:02:17,000
that are used elsewhere
in a notebook.

58
00:02:17,000 --> 00:02:18,600
One layout function
that is useful

59
00:02:18,600 --> 00:02:20,000
in this example is Grid,

60
00:02:20,000 --> 00:02:23,650
which displays expressions
in a two-dimensional grid.

61
00:02:23,650 --> 00:02:25,750
The elements in that grid
can be anything, including,

62
00:02:25,750 --> 00:02:29,000
for example, controls like
two-dimensional sliders.

63
00:02:29,000 --> 00:02:31,700
To use the Grid function
in Manipulate, add curly braces

64
00:02:31,700 --> 00:02:35,000
so that the control specifications
become elements of an array

65
00:02:35,000 --> 00:02:38,000
and enclose that array in Grid.

66
00:02:38,000 --> 00:02:40,100
One remaining detail
to complete this input

67
00:02:40,100 --> 00:02:42,300
is enclosing
each slider specification

68
00:02:42,300 --> 00:02:44,000
in the Control function.

69
00:02:44,000 --> 00:02:46,450
The Control function
has previously been unnecessary,

70
00:02:46,450 --> 00:02:49,000
but it is needed here
to distinguish the lists

71
00:02:49,000 --> 00:02:51,650
that specify the controls

72
00:02:51,650 --> 00:02:53,900
from the lists
that are part of the array,

73
00:02:53,900 --> 00:02:57,400
and also to distinguish controls
from other layout functions.

74
00:02:57,400 --> 00:03:01,500
The result is a display with
the sliders arranged in a grid.

75
00:03:01,500 --> 00:03:04,100
Functions like TabView
can also be used in Manipulate.

76
00:03:04,100 --> 00:03:06,550
For example,
this uses the TabView function

77
00:03:06,550 --> 00:03:09,700
to put each control
on a different tab.

78
00:03:09,700 --> 00:03:10,800
There are many

79
00:03:10,800 --> 00:03:13,000
other ways of labeling
and arranging controls.

80
00:03:13,000 --> 00:03:15,500
For example, returning
to the earlier example,

81
00:03:15,500 --> 00:03:16,800
most of the programming here

82
00:03:16,800 --> 00:03:19,800
is in the first argument
of the Manipulate function.

83
00:03:19,800 --> 00:03:22,400
The controls are specified
in a few lines at the end.

84
00:03:22,400 --> 00:03:23,400
There is a label,

85
00:03:23,400 --> 00:03:26,400
followed by a specification
that gives a popup menu

86
00:03:26,400 --> 00:03:29,000
for choosing the vertical
variable in the plot.

87
00:03:29,000 --> 00:03:31,000
The next specification
gives a control

88
00:03:31,000 --> 00:03:32,000
called a setter bar

89
00:03:32,000 --> 00:03:35,000
for choosing whether to use
a logarithmic scale

90
00:03:35,000 --> 00:03:37,500
or a linear scale
on the vertical axis.

91
00:03:37,500 --> 00:03:40,700
Delimiter draws the lines
between groups of controls.

92
00:03:40,700 --> 00:03:43,600
After that are similar controls
for the horizontal axis,

93
00:03:43,600 --> 00:03:45,000
and at the end
is a row of buttons

94
00:03:45,000 --> 00:03:48,000
for choosing whether to plot
each country as a point

95
00:03:48,000 --> 00:03:51,500
or as a flag
or as the name of a country.

96
00:03:51,500 --> 00:03:53,500
The control types
are determined automatically

97
00:03:53,500 --> 00:03:56,000
based on how
the variable is specified.

98
00:03:56,000 --> 00:03:58,000
You can use
the ControlType option

99
00:03:58,000 --> 00:03:59,500
to specify a different control.

100
00:03:59,500 --> 00:04:03,350
For example, this specifies
that the first scale control

101
00:04:03,350 --> 00:04:06,700
should be a RadioButtonBar,
rather than a SetterBar.

102
00:04:06,700 --> 00:04:09,000
The behavior of the program
with the radio buttons

103
00:04:09,000 --> 00:04:10,000
is the same as before,

104
00:04:10,000 --> 00:04:12,200
but the control
for that one variable

105
00:04:12,200 --> 00:04:14,700
has a different appearance.

106
00:04:14,700 --> 00:04:17,300
There are many other things
that can be done with Manipulate.

107
00:04:17,300 --> 00:04:18,300
A good source of examples

108
00:04:18,300 --> 00:04:20,500
is the Wolfram Demonstrations
Project website,

109
00:04:20,500 --> 00:04:24,000
where you can find thousands
of examples submitted by users,

110
00:04:24,000 --> 00:04:27,300
and there are also good tutorials
on the Manipulate function

111
00:04:27,300 --> 00:04:30,600
in the Wolfram documentation.

112
00:04:30,600 --> 00:04:33,000
Manipulate is useful
for standalone applications,

113
00:04:33,000 --> 00:04:36,500
where the controls and display
are all in the same place,

114
00:04:36,500 --> 00:04:37,600
but there are many applications

115
00:04:37,600 --> 00:04:40,200
where it is useful to put
the controls somewhere else.

116
00:04:40,200 --> 00:04:41,350
One place to put controls

117
00:04:41,350 --> 00:04:43,900
is in a separate window,
called a palette.

118
00:04:43,900 --> 00:04:46,100
Here is the example
shown earlier, which is

119
00:04:46,100 --> 00:04:48,000
the special characters palette.

120
00:04:48,000 --> 00:04:51,000
This palette is a collection
of buttons called paste buttons,

121
00:04:51,000 --> 00:04:54,500
which can be generated using
a function called PasteButton.

122
00:04:54,500 --> 00:04:56,800
For example, this gives
a paste button

123
00:04:56,800 --> 00:05:00,800
that pastes the letters ABC
into the current notebook.

124
00:05:00,800 --> 00:05:02,300
You can create a grid of buttons,

125
00:05:02,300 --> 00:05:04,500
like the grids in
the special characters palette

126
00:05:04,500 --> 00:05:06,300
using the Grid function.

127
00:05:06,300 --> 00:05:08,800
That grid can then
be converted into a palette,

128
00:05:08,800 --> 00:05:11,300
using the CreatePalette function.

129
00:05:11,300 --> 00:05:13,200
The buttons in that palette
can then be used

130
00:05:13,200 --> 00:05:15,500
to insert characters
into the notebook.

131
00:05:15,500 --> 00:05:18,000
This palette could also have
been generated by selecting

132
00:05:18,000 --> 00:05:19,800
the grid of buttons and choosing

133
00:05:19,800 --> 00:05:23,500
Create Palette from Selection
under the Palettes menu.

134
00:05:23,500 --> 00:05:26,300
Palettes can also include controls
other than paste buttons.

135
00:05:26,300 --> 00:05:27,500
For example,

136
00:05:27,500 --> 00:05:29,800
this input gives a palette
with a popup menu

137
00:05:29,800 --> 00:05:31,000
for choosing a location

138
00:05:31,000 --> 00:05:34,300
and a paste button
for pasting the chosen location

139
00:05:34,300 --> 00:05:36,500
into a notebook.

140
00:05:36,500 --> 00:05:39,700
One common use of palettes is
for entering function templates.

141
00:05:39,700 --> 00:05:41,000
For example, consider a project

142
00:05:41,000 --> 00:05:43,200
where there is some
frequently used input,

143
00:05:43,200 --> 00:05:45,300
like this input that gives
the current temperature

144
00:05:45,300 --> 00:05:48,200
and the local time
for a location.

145
00:05:48,200 --> 00:05:50,900
Rather than entering that entire
input for each new location,

146
00:05:50,900 --> 00:05:53,400
we could instead start
with a template like this,

147
00:05:53,400 --> 00:05:56,400
with a small black square
called a selection placeholder

148
00:05:56,400 --> 00:05:58,200
in place of the location.

149
00:05:58,200 --> 00:06:00,000
The small black square
is a special character

150
00:06:00,000 --> 00:06:01,800
that can be entered
in several different ways,

151
00:06:01,800 --> 00:06:04,000
one of which is to
type a backslash

152
00:06:04,000 --> 00:06:05,100
and an open square bracket

153
00:06:05,100 --> 00:06:06,800
and then the name
of the character.

154
00:06:06,800 --> 00:06:09,200
The name of this character
is SelectionPlaceholder.

155
00:06:09,200 --> 00:06:11,800
The SelectionPlaceholder
character appears as soon as

156
00:06:11,800 --> 00:06:14,500
the closing square bracket
is entered.

157
00:06:14,500 --> 00:06:16,200
A palette with a button
to enter that template

158
00:06:16,200 --> 00:06:18,800
can be generated
by first creating the button.

159
00:06:18,800 --> 00:06:21,500
In this input,
the Defer function is included

160
00:06:21,500 --> 00:06:23,400
so that the program
does not get evaluated

161
00:06:23,400 --> 00:06:26,700
until after a value
is inserted for the placeholder.

162
00:06:26,700 --> 00:06:29,000
The Defer function, or something
that has the same effect,

163
00:06:29,000 --> 00:06:32,500
is a common requirement
in examples like this one.

164
00:06:32,500 --> 00:06:34,300
The result is a button
that can be used

165
00:06:34,300 --> 00:06:35,600
just by clicking the button

166
00:06:35,600 --> 00:06:37,900
and inserting a value
for the placeholder,

167
00:06:37,900 --> 00:06:41,000
or we could instead start
by entering a location,

168
00:06:41,000 --> 00:06:42,400
selecting the location,

169
00:06:42,400 --> 00:06:44,050
clicking the button
to generate the input,

170
00:06:44,050 --> 00:06:47,600
which automatically inserts
the selection into the template,

171
00:06:47,600 --> 00:06:50,900
and then evaluating
the resulting input.

172
00:06:50,900 --> 00:06:53,400
A shorter label for that button
can be entered

173
00:06:53,400 --> 00:06:55,600
by including the label
as the first argument

174
00:06:55,600 --> 00:06:57,500
in the PasteButton function.

175
00:06:57,500 --> 00:07:01,200
Then move the button to a palette
using the CreatePalette function,

176
00:07:01,200 --> 00:07:04,500
which gives a palette
with one button.

177
00:07:04,500 --> 00:07:05,500
The button in the palette

178
00:07:05,500 --> 00:07:07,800
works just like the button
that was created earlier.

179
00:07:09,450 --> 00:07:11,950
Another interactive way
to generate that same result

180
00:07:11,950 --> 00:07:13,500
is with a dialog box.

181
00:07:13,500 --> 00:07:15,100
For example, here is an input

182
00:07:15,100 --> 00:07:18,400
that uses the DialogInput function
to generate a dialog box

183
00:07:18,400 --> 00:07:21,300
with the popup menu
for selecting a location,

184
00:07:21,300 --> 00:07:23,600
and clicking Done
evaluates the program

185
00:07:23,600 --> 00:07:27,000
that generates the time
and temperature result.

186
00:07:27,000 --> 00:07:29,000
To break that input
down a little bit,

187
00:07:29,000 --> 00:07:31,650
this input uses
the DialogueInput function

188
00:07:31,650 --> 00:07:34,200
to give a dialog box
with just two buttons,

189
00:07:34,200 --> 00:07:37,000
which are created
by the ChoiceButtons function.

190
00:07:37,000 --> 00:07:40,100
Clicking the Cancel button
returns $Canceled,

191
00:07:40,100 --> 00:07:44,000
and clicking OK
just closes the dialog box.

192
00:07:44,000 --> 00:07:46,200
The dialog box can be made
to return something

193
00:07:46,200 --> 00:07:48,500
by including
the DialogueReturn function

194
00:07:48,500 --> 00:07:51,000
in the arguments
of the ChoiceButtons function.

195
00:07:51,000 --> 00:07:53,200
For example, this input
gives a dialog box

196
00:07:53,200 --> 00:07:55,900
where clicking Done
returns a number

197
00:07:55,900 --> 00:08:00,200
and clicking Cancel
returns the symbol $Canceled.

198
00:08:00,200 --> 00:08:02,800
To get the dialog box
for time and temperature data,

199
00:08:02,800 --> 00:08:04,200
we can modify this program

200
00:08:04,200 --> 00:08:06,500
to run the time
and temperature program

201
00:08:06,500 --> 00:08:08,500
rather than just
returning a number,

202
00:08:08,500 --> 00:08:11,400
and include a popup menu
for selecting the location.

203
00:08:13,000 --> 00:08:15,000
Two other modifications
in this program

204
00:08:15,000 --> 00:08:17,000
are the addition
of DynamicModule

205
00:08:17,000 --> 00:08:18,500
and the Column function.

206
00:08:18,500 --> 00:08:21,000
The Column function is included
so that the popup menu

207
00:08:21,000 --> 00:08:23,500
and the choice buttons
are displayed in a column

208
00:08:23,500 --> 00:08:27,200
and DynamicModule is included
to localize the variable loc,

209
00:08:27,200 --> 00:08:29,500
since the popup menu
would otherwise assign

210
00:08:29,500 --> 00:08:32,700
a global value to that variable,
which could be a problem

211
00:08:32,700 --> 00:08:34,500
if a variable with the same name

212
00:08:34,500 --> 00:08:37,500
is used somewhere else
in the project.

213
00:08:37,500 --> 00:08:38,500
Before closing this section,

214
00:08:38,500 --> 00:08:40,800
one other place
to put interactive controls

215
00:08:40,800 --> 00:08:43,000
is in a fixed location
at the top of the notebook

216
00:08:43,000 --> 00:08:45,300
using a feature
called a docked cell.

217
00:08:45,300 --> 00:08:46,700
A docked cell can be created

218
00:08:46,700 --> 00:08:49,900
by setting the DockedCells option
of the current notebook.

219
00:08:49,900 --> 00:08:51,000
For example, this input

220
00:08:51,000 --> 00:08:54,000
introduces a docked cell
with some text.

221
00:08:54,000 --> 00:08:55,750
Usually the input
for a docked cell

222
00:08:55,750 --> 00:08:58,500
is a raw cell expression
and not just some text,

223
00:08:58,500 --> 00:09:01,000
and the recommended cell style
for that cell

224
00:09:01,000 --> 00:09:04,000
is DockedCell,
as in this input.

225
00:09:04,000 --> 00:09:07,000
Docked cells are typically used
for controls or for anything else

226
00:09:07,000 --> 00:09:08,500
that is used throughout
a notebook.

227
00:09:08,500 --> 00:09:10,100
For example, here is a notebook

228
00:09:10,100 --> 00:09:12,600
with a popup menu
for selecting a location

229
00:09:12,600 --> 00:09:14,500
and several elements
within that notebook

230
00:09:14,500 --> 00:09:16,500
that depend on that selection.

231
00:09:16,500 --> 00:09:18,500
The TrackedSymbols option
is included here

232
00:09:18,500 --> 00:09:20,000
so that those elements

233
00:09:20,000 --> 00:09:22,500
are only updated
when the location is changed,

234
00:09:22,500 --> 00:09:25,000
instead of updating whenever
there are changes in things

235
00:09:25,000 --> 00:09:27,300
like the time or the temperature.

236
00:09:27,300 --> 00:09:29,200
This is an example
where it could be useful

237
00:09:29,200 --> 00:09:31,500
to put the popup menu
in a docked cell.

238
00:09:31,500 --> 00:09:34,000
Start by setting the cell style
to DockedCell

239
00:09:34,000 --> 00:09:37,000
using the Style submenu
under the Format menu,

240
00:09:37,000 --> 00:09:39,000
and then copy the cell
by choosing

241
00:09:39,000 --> 00:09:41,800
Copy As ▶ Cell Expression
from the Edit menu.

242
00:09:41,800 --> 00:09:43,650
Then paste that cell
into the input

243
00:09:43,650 --> 00:09:45,900
that sets the value
of the DockedCells option

244
00:09:45,900 --> 00:09:47,000
for this notebook.

245
00:09:47,000 --> 00:09:48,400
This brings up a dialog box

246
00:09:48,400 --> 00:09:50,400
asking if the cells
should be interpreted

247
00:09:50,400 --> 00:09:52,500
or should be pasted
as a cell expression.

248
00:09:52,500 --> 00:09:54,400
In this example,
the intention is to use

249
00:09:54,400 --> 00:09:56,500
the raw uninterpreted
cell expression,

250
00:09:56,500 --> 00:10:00,500
so select No and then evaluate
the resulting input

251
00:10:00,500 --> 00:10:02,400
to put the popup menu
in a docked cell

252
00:10:02,400 --> 00:10:05,000
at the top of the notebook.

253
00:10:05,000 --> 00:10:07,000
That's the end of the examples
for this section.

254
00:10:07,000 --> 00:10:09,150
There is much more to be said
about all of the topics

255
00:10:09,150 --> 00:10:10,650
that came up in this brief tour

256
00:10:10,650 --> 00:10:14,200
of features for constructing
interactive program interfaces.

257
00:10:14,200 --> 00:10:16,000
A good place to start
to find more information

258
00:10:16,000 --> 00:10:17,300
in the Wolfram Documentation

259
00:10:17,300 --> 00:10:20,200
is this page on
Custom Interface Construction,

260
00:10:20,200 --> 00:10:22,000
which includes links
to documentation

261
00:10:22,000 --> 00:10:24,500
for all of the topics
that came up in this section.

